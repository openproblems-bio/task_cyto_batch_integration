import anndata as ad
import scanpy as sc
import numpy as np

## VIASH START
# Note: this section is auto-generated by viash at runtime. To edit it, make changes
# in config.vsh.yaml and then run `viash config inject config.vsh.yaml`.
par = {
  'input': 'resources_test/task_cyto_batch_integration/mouse_spleen_flow_cytometry_subset/unintegrated_censored.h5ad',
  'output': 'output.h5ad'
}
meta = {
  'name': 'combat'
}
## VIASH END

print('Reading input files', flush=True)
adata = ad.read_h5ad(par["input"])

print('Preprocess data', flush=True)
markers_to_correct = adata.var[adata.var["to_correct"]].index.to_numpy()
markers_not_correct = [x for x in adata.var['to_correct'].index if x not in markers_to_correct]
temp_var_index = [*markers_to_correct, *markers_not_correct] # temporary indexing : not corrected markers last

adata_to_correct = adata[:,markers_to_correct].copy()
adata_to_correct.X = adata_to_correct.layers['preprocessed'] # sc.pp.combat operates only on .X

print('Train model', flush=True)
corrected_matrix = sc.pp.combat(adata_to_correct, key='batch', inplace=False) 

print('Aggregate data', flush=True)
uncorrected_matrix = adata[:,markers_not_correct].layers['preprocessed'] 
integrated_matrix = np.concatenate([corrected_matrix, uncorrected_matrix], axis=1)

print("Write output AnnData to file", flush=True)
out_data = ad.AnnData(
    obs=adata.obs[[]],
    var=adata[:,temp_var_index].var[[]],
   layers={"integrated": integrated_matrix},
    uns={
        "dataset_id": adata.uns["dataset_id"],
        "method_id": meta['name'],
        "parameters": {},
    },
)
print('Re-ordering markers', flush=True)
out_data = out_data[:,adata.var_names]

out_data.write_h5ad(par['output'], compression='gzip')
