# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_method.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: mnnpy
# A relatively short label, used when rendering visualisations (required)
label: mnnpy
# A one sentence summary of how this method works (required). Used when 
# rendering summary tables.
summary: "Batch effect correction by matching mutual nearest neighbors, Python implementation."
# A multi-line description of how this component works (required). Used
# when rendering reference documentation.
description: |
  An implementation of MNN correct in python featuring low memory usage, full multicore support and compatibility with the scanpy framework.

  Batch effect correction by matching mutual nearest neighbors (Haghverdi et al, 2018) has been implemented as a function 'mnnCorrect' in the R package scran. Sadly it's extremely slow for big datasets and doesn't make full use of the parallel architecture of modern CPUs.

  This project is a python implementation of the MNN correct algorithm which takes advantage of python's extendability and hackability. It seamlessly integrates with the scanpy framework and has multicore support in its bones.
references:
  bibtex: |
    @misc{Kang2022,
      author = {Kang, Chris},
      title = {mnnpy},
      year = {Kang2022},
      publisher = {GitHub},
      journal = {GitHub repository},
      howpublished = {\url{https://github.com/chriscainx/mnnpy}},
      commit = {2097dec30c193f036c5ed7e1c3d1e3a6270e102b}
    }
links:
  repository: https://github.com/chriscainx/mnnpy
  documentation: https://github.com/chriscainx/mnnpy#readme

# Component-specific parameters (optional)
# arguments:
#   - name: "--n_neighbors"
#     type: "integer"
#     default: 5
#     description: Number of neighbors to use.

# Resources required to run the component
resources:
  # The script of your component (required)
  - type: python_script
    path: script.py

engines:
  - type: docker
    image: python:3.8
    setup:
      - type: apt
        packages:
          - procps
          - libhdf5-dev
      - type: python
        pypi:
          - h5py==3.11.0
          - anndata~=0.8.0
          - scanpy
          - pyyaml
          - requests
          - jsonschema
      - type: python
        pypi:
          - git+https://github.com/openproblems-bio/core#subdirectory=packages/python/openproblems
          - --ignore-requires-python
      - type: python
        github:
          - chriscainx/mnnpy
runners:
  - type: executable
  - type: nextflow
    directives:
      label: [hightime, midcpu, highmem]