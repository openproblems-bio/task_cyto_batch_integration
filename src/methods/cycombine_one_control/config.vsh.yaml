# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_method.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: cycombine_one_control
# A relatively short label, used when rendering visualisations (required)
label: Cycombine with one Control
# A one sentence summary of how this method works (required). Used when 
# rendering summary tables.
summary: "cyCombine with one control samples"
description: |
  cyCombine perform batch integration using self-organizing maps and ComBat.
  It first uses self-organizing maps (SOM) to group similar cells into clusters, 
  then applies a ComBat-based method to correct batch effects within 
  each cluster. 
  Here, we run cyCombine with control samples from just one condition/group (replicates in cyCombine terminology).
references:
  doi: 
    - 10.1038/s41467-022-29383-5
links:
  documentation: https://biosurf.org/cyCombine.html
  repository: https://github.com/biosurf/cyCombine

resources:
  # The script of your component (required)
  - type: r_script
    path: script.R
  # Additional resources your script needs (optional)
  # - type: file
  #   path: weights.pt

engines:
  - type: docker
    image: openproblems/base_r:1
    # Add custom dependencies here (optional). For more information, see
    # https://viash.io/reference/config/engines/docker/#setup .
    setup:
      - type: r
        bioc: [sva]
        github: [biosurf/cyCombine]

runners:
  - type: executable
  - type: nextflow
    directives:
      label: [midtime,midmem,midcpu]
