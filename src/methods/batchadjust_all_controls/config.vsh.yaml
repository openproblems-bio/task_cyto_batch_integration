# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_method.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: batchadjust_all_controls
# A relatively short label, used when rendering visualisations (required)
label: Batchadjust with all controls
# A one sentence summary of how this method works (required). Used when 
# rendering summary tables.
summary: "Batchadjust with all control sample."
# A multi-line description of how this component works (required). Used
# when rendering reference documentation.
description: |
  CytofBatchadjust corrects batch effects across cytometry data by aligning signal intensity peaks for each channel across batches.
  The algorithm uses technical replicates included in each barcode set as reference points to anchor each batch. 
  Adjustments factors are calibrated using anchor samples representing each barcode set, then applied to all samples composing a batch. 

  This implementation uses samples from each group as control samples.

references:
  doi: 
    - 10.3389/fimmu.2019.02367
  bibtex:
    - |
      @article{schuyler2019minimizing,
        title={Minimizing batch effects in mass cytometry data},
        author={Schuyler, Ronald P and Jackson, Conner and Garcia-Perez, Josselyn E and Baxter, Ryan M and Ogolla, Sidney and Rochford, Rosemary and Ghosh, Debashis and Rudra, Pratyaydipta and Hsieh, Elena WY},
        journal={Frontiers in immunology},
        volume={10},
        pages={2367},
        year={2019},
        publisher={Frontiers Media SA}
      }
links:
  # URL to the documentation for this method (required).
  documentation: https://github.com/CUHIMSR/CytofBatchAdjust
  # URL to the code repository for this method (required).
  repository: https://github.com/CUHIMSR/CytofBatchAdjust



# Component-specific parameters (optional)
argument_groups:
  - name: "Parameters"
    arguments:
      - name: "--percentile"
        type: integer
        default: 80
        info:
          optimize:
            type: linear
            lower: 60
            upper: 99
        description: "scale channels to the Nth percentile of the reference batch"


# Resources required to run the component
resources:
  # The script of your component (required)
  - type: r_script
    path: script.R
  - path: /src/utils/anndata_to_fcs.R
  - path: BatchAdjust.R

engines:
  # Specifications for the Docker image for this component.
  - type: docker
    image: openproblems/base_r:1
    # Add custom dependencies here (optional). For more information, see
    # https://viash.io/reference/config/engines/docker/#setup .
    setup:
      - type: r
        bioc: [flowCore]
        packages: [docstring, anndata]

runners:
  # This platform allows running the component natively
  - type: executable
  # Allows turning the component into a Nextflow module / pipeline.
  - type: nextflow
    directives:
      label: [midtime,midmem,midcpu]
