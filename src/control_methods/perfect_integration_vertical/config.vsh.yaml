# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_control_method.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: perfect_integration_vertical
# A relatively short label, used when rendering visualisations (required)
label: Perfect Integration Vertical
# A one sentence summary of how this method works (required). Used when 
# rendering summary tables.
summary: "Positive control method for vertical metrics reflecting a scenario in which all samples belong to the same batch"
# A multi-line description of how this component works (required). Used
# when rendering reference documentation.
description: |
  This control method return all samples from batch 1. 
  Because the samples all came from one batch, we do not expect to see any technical
  variation caused by batch effects, but we still expect a sample-level effect due to the 
  underlying differences in biology of the samples.
  The vertical metrics should return a good score.
  However, poor scores are expected for horizontal metrics because some samples (those
  from unintegrated data) will be compared against the validation data, which still 
  contains variation due to batch effect.

# Resources required to run the component
resources:
  # The script of your component (required)
  - type: python_script
    path: script.py

engines:
  # Specifications for the Docker image for this component.
  - type: docker
    image: openproblems/base_python:1

runners:
  # This platform allows running the component natively
  - type: executable
  # Allows turning the component into a Nextflow module / pipeline.
  - type: nextflow
    directives:
      label: [midtime,midmem,midcpu]
