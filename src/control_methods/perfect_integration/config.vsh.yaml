# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_control_method.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: perfect_integration
# A relatively short label, used when rendering visualisations (required)
label: Perfect Integration
# A one sentence summary of how this method works (required). Used when 
# rendering summary tables.
summary: "Act as a positive control by returning samples from the same batch (batch 1) for both splits."
# A multi-line description of how this component works (required). Used
# when rendering reference documentation.
description: |
  The method returns only samples from one batch (batch 1), for both the splits.
  This act as a positive control method for the metrics that compare technical replicates between runs ('horizontal' metrics), as the difference between a sample compared
  to itself should be zero. It also acts as a positive control for 'vertical' metrics, as the samples being returned are from the same batch.

# Resources required to run the component
resources:
  # The script of your component (required)
  - type: python_script
    path: script.py

engines:
  # Specifications for the Docker image for this component.
  - type: docker
    image: openproblems/base_python:1

runners:
  # This platform allows running the component natively
  - type: executable
  # Allows turning the component into a Nextflow module / pipeline.
  - type: nextflow
    directives:
      label: [midtime,midmem,midcpu]
