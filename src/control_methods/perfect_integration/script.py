import anndata as ad
import pandas as pd

## VIASH START
# Note: this section is auto-generated by viash at runtime. To edit it, make changes
# in config.vsh.yaml and then run `viash config inject config.vsh.yaml`.
par = {
  "input_unintegrated": "resources_test/task_cyto_batch_integration/starter_file/unintegrated.h5ad",
  "input_validation": "resources_test/task_cyto_batch_integration/starter_file/validation.h5ad",
  "output": "output.h5ad"
  
}
meta = {
  'name': 'perfect_integration'
}
## VIASH END

print("Reading input files", flush=True)
input_unintegrated = ad.read_h5ad(par['input_unintegrated'])
input_validation = ad.read_h5ad(par['input_validation'])

print("Creating integrated data", flush=True)
input_integrated = input_validation.copy()

# change the sample and batch name so they mimic the ones that are in unintegrated
donor_sample_map = pd.unique(input_unintegrated.obs[['sample', 'donor']].values.ravel())

input_unintegrated.obs.groupby('donor')['sample'].unique().to_dict()

input_integrated.obs['sample'].unique()
input_integrated.obs['donor'].unique()

print('Preprocess data', flush=True)
# ... preprocessing ...

print('Train model', flush=True)
# ... train model ...

print('Generate predictions', flush=True)
# ... generate predictions ...

print("Write output AnnData to file", flush=True)
output = ad.AnnData(
  
)
output.write_h5ad(par['output'], compression='gzip')
