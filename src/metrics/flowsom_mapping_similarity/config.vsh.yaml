__merge__: ../../api/comp_metric.yaml

name: flowsom_mapping_similarity

# Metadata for your component
info:
  metrics:
    # A unique identifier for your metric (required).
    # Can contain only lowercase letters or underscores.
    - name: flowsom_mean_mapping_similarity
      # A relatively short label, used when rendering visualisarions (required)
      label: FlowSOM Mean Mapping Similarity
      # A one sentence summary of how this metric works (required). Used when 
      # rendering summary tables.
      summary: "Assess the similarity between FlowSOM trees of integrated and validation samples."
      # A multi-line description of how this component works (required). Used
      # when rendering reference documentation.
      description: |
        The metric is based on the FlowSOM algorithm, a popular method which uses self-organizing maps for the viasualization/interpretation/clustering of cytometry data. 
        The FlowSOM algorithm creates a tree structure that represents the relationships between different cell populations in the data.

        For each paired sample of technical replicates (where 'split1' are integrated technical replicates from split 1 and 'split2' are integrated technical replicates from split 2)
        1. A FlowSOM tree is created using cells in the sample from split 1.
        2. Cells from the sample in split 2 are mapped onto the FlowSOM tree created in step 1.
        3. A similarity measure is computed by comparing cell type proportions of 'split2' and 'split1' in each flowsom cluster.

        Ideally, the proportions of cell types in the flowsom clusters of the paired samples should be similar, as they are technical replicates.

        The FlowSOM mapping similarity measure can be expressed as follows:
        $\text{FlowSOM mapping similarity} = 100 - \text{FlowSOM mapping dissimilarity}$

        The $\text{FlowSOM mapping dissimilarity}$ is:

        $\text{FlowSOM mapping dissimilarity} = \sum_{k=1}^{K}w_{k}\sum_{c=1}^{C}\abs{P^{split1}_{k,c} - P^{split2}_{k,c}}$

        Where:
        - $K$ is the number of flowsom clusters
        - $C$ is the number of cell types
        - $w_{k}$ is the weight of flowsom cluster $k$. It refers to the number of cells in flowsom cluster $k$, divided by the total number of cells in the flowsom tree. Note: the flowsom tree contains all the cells of a sample pair (both integrated and validation). 
        - $P^{split1}_{k,c}$ is the percentage of cell type $c$ in flowsom cluster $k$ of the split 1 sample
        - $P^{split2}_{k,c}$ is the percentage of cell type $c$ in flowsom cluster $k$ of the split 2 sample

        The average FlowSOM mapping similarity among all paired samples is computed and reported as the final metric value.
        Unlabelled cells are excluded from the analysis.

      references:
        doi: 
          - 10.18129/B9.bioc.FlowSOM
          - 10.1002/cyto.a.22625
      links:
        # URL to the documentation for this metric (required).
        documentation: https://www.bioconductor.org/packages/release/bioc/vignettes/FlowSOM/inst/doc/FlowSOM.pdf
        # URL to the code repository for this metric (required).
        repository: https://github.com/SofieVG/FlowSOM
      # The minimum possible value for this metric (required)
      min: -0.0000000001
      # The maximum possible value for this metric (required)
      max: 100
      # Whether a higher value represents a 'better' solution (required)
      maximize: true

# Resources required to run the component
resources:
  # The script of your component (required)
  - type: r_script
    path: script.R
  - path: helper.R
  - type: python_script
    path: /src/utils/helper_functions.R
engines:
  # Specifications for the Docker image for this component.
  - type: docker
    image: openproblems/base_r:1
    setup:
      - type: r
        bioc: [FlowSOM, flowCore]
      - type: python
        packages: [anndata, numpy, pandas, scipy]
runners:
  # This platform allows running the component natively
  - type: executable
  # Allows turning the component into a Nextflow module / pipeline.
  - type: nextflow
    directives:
      label: [midtime, midmem, midcpu]
