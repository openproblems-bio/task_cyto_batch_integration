# The API specifies which type of component this is.
# It contains specifications for:
#   - The input/output files
#   - Common parameters
#   - A unit test
__merge__: ../../api/comp_metric.yaml

# A unique identifier for your component (required).
# Can contain only lowercase letters or underscores.
name: cms



# Metadata for your component
info:
  metrics:
      # A unique identifier for your metric (required).
      # Can contain only lowercase letters or underscores.
    - name: cms
      # A relatively short label, used when rendering visualisarions (required)
      label: Cms
      # A one sentence summary of how this metric works (required). Used when 
      # rendering summary tables.
      summary: "Cellspecific Mixing Score (cms) quantifies batch effects at the cell level by computing batch-specific distance distributions towards k-nearest neighbouring cells."
      # A multi-line description of how this component works (required). Used
      # when rendering reference documentation.
      description: |
        The cellspecific mixing score cms tests for each cell the hypothesis that batch-specific distance 
        distributions towards it's k-nearest neighbouring (knn) cells are derived from the same unspecified 
        underlying distribution using the Anderson-Darling test. The test considers differences in the number of cells 
        from each batch, making the cms a robust metric when evaluating batch effects in datasets with unbalanced batch sizes.

        The cms for each cell can be interpreted as a P-value, that is, the probability of observing deviations 
        in the batch specific distance distributions by chance (assuming they are all derived from the same distribution).
        Thus, enrichment of low P-values is indicative of poor batch mixing and a dataset with randomly shuffled batch 
        labels should yield uniformly distributed P-values.

        A high cms score refers to good mixing, while a low score indicates batch-specific bias.
        Thus, enrichment of low cms scores is indicative of poor batch mixing.
        It has been empirically observed that a uniform distribution of cms scores across cells 
        in a dataset is indicative of good mixing.


      references:
        doi: 
          - 10.26508/lsa.202001004
        bibtex:
          - |
            @article{lutge2021cellmixs,
              title={CellMixS: quantifying and visualizing batch effects in single-cell RNA-seq data},
              author={L{\"u}tge, Almut and Zyprych-Walczak, Joanna and Kunzmann, Urszula Brykczynska and Crowell, Helena L and Calini, Daniela and Malhotra, Dheeraj and Soneson, Charlotte and Robinson, Mark D},
              journal={Life science alliance},
              volume={4},
              number={6},
              year={2021},
              publisher={Life Science Alliance}
            }
          - |

      links:
        # URL to the documentation for this metric (required).
        documentation: https://url.to/the/documentation
        # URL to the code repository for this metric (required).
        repository: https://github.com/organisation/repository
      # The minimum possible value for this metric (required)
      min: 0
      # The maximum possible value for this metric (required)
      max: 1
      # Whether a higher value represents a 'better' solution (required)
      maximize: false

# Component-specific parameters (optional)
# arguments:
#   - name: "--n_neighbors"
#     type: "integer"
#     default: 5
#     description: Number of neighbors to use.

# Resources required to run the component
resources:
  # The script of your component (required)
  - type: r_script
    path: script.R
  # Additional resources your script needs (optional)
  # - type: file
  #   path: weights.pt

engines:
  # Specifications for the Docker image for this component.
  - type: docker
    image: openproblems/base_r:1.0.0
    # Add custom dependencies here (optional). For more information, see
    # https://viash.io/reference/config/engines/docker/#setup .
    # setup:
    #   - type: r
    #     packages: tibble

runners:
  # This platform allows running the component natively
  - type: executable
  # Allows turning the component into a Nextflow module / pipeline.
  - type: nextflow
    directives:
      label: [midtime,midmem,midcpu]
