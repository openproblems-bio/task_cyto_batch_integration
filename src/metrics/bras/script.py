import anndata as ad
import numpy as np
import sys
from scib_metrics import bras

## VIASH START
# Note: this section is auto-generated by viash at runtime. To edit it, make changes
# in config.vsh.yaml and then run `viash config inject config.vsh.yaml`.
par = {
  'input_validation': 'resources_test/.../validation.h5ad',
  'input_unintegrated': 'resources_test/.../unintegrated.h5ad',
  'input_integrated': 'resources_test/.../integrated.h5ad',
  'output': 'output.h5ad'
}
meta = {
  'name': 'bras'
}
## VIASH END

sys.path.append(meta["resources_dir"])
from helper_functions import (
    get_obs_var_for_integrated,
    remove_unlabelled,
    subset_markers_tocorrect,
    subset_nocontrols,
)

print("Reading input files", flush=True)
integrated_s1 = ad.read_h5ad(par["input_integrated_split1"])
integrated_s2 = ad.read_h5ad(par["input_integrated_split2"])
unintegrated = ad.read_h5ad(par["input_unintegrated"])

print("Formatting input files", flush=True)
integrated_s1, integrated_s2 = get_obs_var_for_integrated(
    integrated_s1, integrated_s2, unintegrated
)

integrated_s1 = subset_nocontrols(integrated_s1)
integrated_s1 = subset_markers_tocorrect(integrated_s1)
integrated_s1 = subset_nocontrols(integrated_s1)
integrated_s1 = remove_unlabelled(integrated_s1)

integrated_s2 = subset_nocontrols(integrated_s2)
integrated_s2 = subset_markers_tocorrect(integrated_s2)
integrated_s2 = subset_nocontrols(integrated_s2)
integrated_s2 = remove_unlabelled(integrated_s2)

print('Compute metrics', flush=True)
batch_labels_s1 = integrated_s1.obs['batch'].values
ct_labels_s1 = integrated_s1.obs['cell_type'].values

bras_s1 = bras(
    integrated_s1.layers["integrated"],
    labels = batch_labels_s1,
    batch = ct_labels_s1,
    metric='cosine'
)

batch_labels_s2 = integrated_s2.obs['batch'].values
ct_labels_s2 = integrated_s2.obs['cell_type'].values

bras_s2 = bras(
    integrated_s2.layers["integrated"],
    labels = batch_labels_s2,
    batch = ct_labels_s2,
    metric='cosine'
)

bras_score = np.mean([bras_s1, bras_s2])

print("Write output AnnData to file", flush=True)
output = ad.AnnData(
    uns={
    'dataset_id': integrated_s1.uns['dataset_id'],
    'method_id': integrated_s1.uns['method_id'],
    'metric_ids': ['bras'],
    'metric_values': [bras_score],
    'bras_s1': bras_s1,
    'bras_s2': bras_s2
  }
)
output.write_h5ad(par['output'], compression='gzip')

