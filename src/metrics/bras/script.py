import sys

import anndata as ad
import numpy as np
from scib_metrics import bras

## VIASH START
# The following code has been auto-generated by Viash.
par = {
    "input_unintegrated": r"resources_test/task_cyto_batch_integration/mouse_spleen_flow_cytometry_subset/unintegrated.h5ad",
    "input_integrated_split1": r"resources_test/task_cyto_batch_integration/mouse_spleen_flow_cytometry_subset/integrated_split1.h5ad",
    "input_integrated_split2": r"resources_test/task_cyto_batch_integration/mouse_spleen_flow_cytometry_subset/integrated_split2.h5ad",
    "output": r"resources_test/task_cyto_batch_integration/mouse_spleen_flow_cytometry_subset/harmonypy_bras_score.h5ad",
}
meta = {
    "name": r"bras",
    "functionality_name": r"bras",
    "resources_dir": r"src/utils",
}

## VIASH END

sys.path.append(meta["resources_dir"])
from helper_functions import (
    get_obs_var_for_integrated,
    remove_unlabelled,
    subset_markers_tocorrect,
    subset_nocontrols,
)

print("Reading input files", flush=True)
integrated_s1 = ad.read_h5ad(par["input_integrated_split1"])
integrated_s2 = ad.read_h5ad(par["input_integrated_split2"])
unintegrated = ad.read_h5ad(par["input_unintegrated"])

print("Formatting input files", flush=True)
integrated_s1, integrated_s2 = get_obs_var_for_integrated(
    integrated_s1, integrated_s2, unintegrated
)

integrated_s1 = subset_nocontrols(integrated_s1)
integrated_s1 = subset_markers_tocorrect(integrated_s1)
integrated_s1 = subset_nocontrols(integrated_s1)
integrated_s1 = remove_unlabelled(integrated_s1)

integrated_s2 = subset_nocontrols(integrated_s2)
integrated_s2 = subset_markers_tocorrect(integrated_s2)
integrated_s2 = subset_nocontrols(integrated_s2)
integrated_s2 = remove_unlabelled(integrated_s2)

print("Compute metrics", flush=True)
batch_labels_s1 = integrated_s1.obs["batch"].values
ct_labels_s1 = integrated_s1.obs["cell_type"].values

bras_s1 = bras(
    integrated_s1.layers["integrated"],
    labels=ct_labels_s1,
    batch=batch_labels_s1,
    metric="euclidean",
    chunk_size=1000,
)

batch_labels_s2 = integrated_s2.obs["batch"].values
ct_labels_s2 = integrated_s2.obs["cell_type"].values

bras_s2 = bras(
    integrated_s2.layers["integrated"],
    labels=ct_labels_s2,
    batch=batch_labels_s2,
    metric="euclidean",
)

bras_score = np.mean([bras_s1, bras_s2])

print("Write output AnnData to file", flush=True)
output = ad.AnnData(
    uns={
        "dataset_id": integrated_s1.uns["dataset_id"],
        "method_id": integrated_s1.uns["method_id"],
        "metric_ids": ["bras"],
        "metric_values": [bras_score],
        "bras_s1": bras_s1,
        "bras_s2": bras_s2,
    }
)
output.write_h5ad(par["output"], compression="gzip")
