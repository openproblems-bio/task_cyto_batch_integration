import anndata as ad
import sys
from scib_metrics import bras

## VIASH START
# Note: this section is auto-generated by viash at runtime. To edit it, make changes
# in config.vsh.yaml and then run `viash config inject config.vsh.yaml`.
par = {
  'input_validation': 'resources_test/.../validation.h5ad',
  'input_unintegrated': 'resources_test/.../unintegrated.h5ad',
  'input_integrated': 'resources_test/.../integrated.h5ad',
  'output': 'output.h5ad'
}
meta = {
  'name': 'bras'
}
## VIASH END

sys.path.append(meta["resources_dir"])
from helper_functions import (
    get_obs_var_for_integrated,
    remove_unlabelled,
    subset_markers_tocorrect,
    subset_nocontrols,
)

print('Reading input files', flush=True)
input_validation = ad.read_h5ad(par['input_validation'])
input_unintegrated = ad.read_h5ad(par['input_unintegrated'])
input_integrated = ad.read_h5ad(par['input_integrated'])

print('Formatting input files', flush=True)
#Format data integrated data
input_integrated = get_obs_var_for_integrated(input_integrated,input_validation,input_unintegrated)
input_integrated = subset_markers_tocorrect(input_integrated)
input_integrated = subset_nocontrols(input_integrated)
input_integrated = remove_unlabelled(input_integrated)

print('Compute metrics', flush=True)
batch_labels = input_integrated.obs['batch'].values
cell_labels = input_integrated.obs['cell_type'].values

bras_score = bras(input_integrated.layers['integrated'], 
                  labels = cell_labels,
                  batch = batch_labels,
                  metric='cosine')
                  

print(bras_score)

print("Write output AnnData to file", flush=True)
output = ad.AnnData(
    uns={
    'dataset_id': input_integrated.uns['dataset_id'],
    'method_id': input_integrated.uns['method_id'],
    'metric_ids': ['bras'],
    'metric_values': [bras_score]
  }
)
output.write_h5ad(par['output'], compression='gzip')
