manifest {
  name = 'methods/cytonorm_all_controls_to_mid'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.12.1-edge'
  version = 'build_main'
  description = 'CytoNorm corrects batch effects by using reference control samples (aliquots of one sample, \ntechnical replicates) included with each batch. \nIt clusters cells using FlowSOM, then trains a model on the control samples to learn how marker \nexpression distributions differ across batches for each population.\nIt then uses splines to align these distributions to a common reference (either a midpoint\nderived from all batches or to a single batch).\n\nHere, we run CytoNorm using all control samples available, aligning to a midpoint derived from all batches.\n\nThe parameter nQ, which specifies the number of quantiles used when computing the splines\nis varied linearly between value of 80-120, with default set to 99 following the default value provided by CytoNorm.\nClustering was performed by FlowSOM.\nThe number of cells clustered by FlowSOM is set to be number of cells in the smallest\ncontrol samples or 1,000,000, whichever is the smaller, multiplied by how many control samples\nthere are in the data.\nThe size of the SOM grid is varied linearly between value of 6-16, with default set to 15\nfollowing the default value provided by CytoNorm.\nThe number of metaclusters is varied linearly between value of 8-20, with default set to 10\nfollowing the default value provided by CytoNorm.\n'
}

process.container = 'nextflow/bash:latest'

// detect tempdir
tempDir = java.nio.file.Paths.get(
  System.getenv('NXF_TEMP') ?:
    System.getenv('VIASH_TEMP') ?: 
    System.getenv('TEMPDIR') ?: 
    System.getenv('TMPDIR') ?: 
    '/tmp'
).toAbsolutePath()

profiles {
  no_publish {
    process {
      withName: '.*' {
        publishDir = [
          enabled: false
        ]
      }
    }
  }
  mount_temp {
    docker.temp            = tempDir
    podman.temp            = tempDir
    charliecloud.temp      = tempDir
  }
  docker {
    docker.enabled         = true
    // docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  podman {
    podman.enabled         = true
    docker.enabled         = false
    singularity.enabled    = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  shifter {
    shifter.enabled        = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    charliecloud.enabled   = false
  }
  charliecloud {
    charliecloud.enabled   = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
  }
}

process{
  withLabel: lowmem { memory = 20.Gb }
  withLabel: midmem { memory = 50.Gb }
  withLabel: highmem { memory = 100.Gb }
  withLabel: lowcpu { cpus = 5 }
  withLabel: midcpu { cpus = 15 }
  withLabel: highcpu { cpus = 30 }
  withLabel: lowtime { time = 1.h }
  withLabel: midtime { time = 4.h }
  withLabel: hightime { time = 8.h }
  withLabel: veryhightime { time = 24.h }
}


